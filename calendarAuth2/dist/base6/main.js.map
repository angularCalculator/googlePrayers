{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<main>\\n    <h3>Google Calendar + Firebase</h3>\\n    <p>Welcome to AngularFirebase world </p>\\n\\n    <div *ngIf=\\\"auth.user$ | async as user\\\">\\n        <h3>Logged in as {{ user.displayName }}</h3>\\n        <img src=\\\"{{ user.photoURL }}\\\" width=\\\"50px\\\">\\n    </div>\\n\\n\\n    <button (click)=\\\"auth.login()\\\" class=\\\"button is-danger\\\">Login with Google</button>\\n\\n    <button (click)=\\\"auth.logout()\\\" class=\\\"button\\\">Logout</button>\\n\\n    <hr>\\n\\n    <div *ngIf=\\\"auth.user$ | async\\\">\\n\\n        <button (click)=\\\"auth.getCalendar()\\\" class=\\\"button is-success\\\">Get Google Calendar</button>\\n        <button (click)=\\\"auth.insertEvent()\\\" class=\\\"button is-warning\\\">Add Event</button>\\n\\n        <div *ngFor=\\\"let item of auth.calendarItems\\\">\\n            <h3>{{ item.summary }} - {{ item.status }}</h3>\\n            <p><em>Created {{ item.created }}</em></p>\\n            <p>{{ item.description }}</p>\\n            <hr>\\n        </div>\\n\\n    </div>\\n\\n</main>\\n<router-outlet></router-outlet>\"","module.exports = \"button {\\n  margin-left: 10px; }\\n\"","import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(private auth: AuthService) {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\n// Add your project credentials\n// Then use it in the imports section below\nconst yourFirebaseConfig = {\n    apiKey: \"AIzaSyAbDgY2uRP5yYEBdiwHjbX2QW6UweMABMY\",\n    authDomain: \"hudz-prayer-calendar.firebaseapp.com\",\n    databaseURL: \"https://hudz-prayer-calendar.firebaseio.com\",\n    projectId: \"hudz-prayer-calendar\",\n    storageBucket: \"hudz-prayer-calendar.appspot.com\",\n    messagingSenderId: \"761721867628\"\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(yourFirebaseConfig),\n    AngularFireAuthModule, \n   ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\n\ndeclare var gapi: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  \n  user$: Observable<firebase.User>; \n  calendarItems: any[];\n\n  constructor(public afAuth: AngularFireAuth) { \n    this.initClient();\n    this.user$ = afAuth.authState;\n  }\n\n  // Initialize the Google API client with desired scopes\n  initClient() {\n    gapi.load('client', () => {\n      console.log('loaded client')\n\n      // It's OK to expose these credentials, they are client safe.\n      gapi.client.init({\n        apiKey: 'AIzaSyAc9Tt8pQQF3ntu2Tz66iUKl_fXHtdhIyc',\n        clientId: '581326886241-3pthiumf8t14p95siesg028gf9rde5pf.apps.googleusercontent.com',\n        discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'],\n        scope: 'https://www.googleapis.com/auth/calendar'\n      })\n\n      gapi.client.load('calendar', 'v3', () => console.log('loaded calendar'));\n\n    });\n\n\n\n  }\n\n  async login() {\n    const googleAuth = gapi.auth2.getAuthInstance()\n    const googleUser = await googleAuth.signIn();\n\n    const token = googleUser.getAuthResponse().id_token;\n\n    console.log(googleUser)\n\n    const credential = auth.GoogleAuthProvider.credential(token);\n\n    await this.afAuth.auth.signInAndRetrieveDataWithCredential(credential);\n\n\n    // Alternative approach, use the Firebase login with scopes and make RESTful API calls\n\n    // const provider = new auth.GoogleAuthProvider()\n    // provider.addScope('https://www.googleapis.com/auth/calendar');\n\n    // this.afAuth.auth.signInWithPopup(provider)\n    \n  }\n  logout() {\n    this.afAuth.auth.signOut();\n  }\n\n  async getCalendar() {\n    const events = await gapi.client.calendar.events.list({\n      calendarId: 'primary',\n      timeMin: new Date().toISOString(),\n      showDeleted: false,\n      singleEvents: true,\n      maxResults: 10,\n      orderBy: 'startTime'\n    })\n\n    console.log(events)\n\n    this.calendarItems = events.result.items;\n  \n  }\n\n  async insertEvent() {\n    const insert = await gapi.client.calendar.events.insert({\n      calendarId: 'primary',\n      start: {\n        dateTime: hoursFromNow(2),\n        timeZone: 'America/Los_Angeles'\n      }, \n      end: {\n        dateTime: hoursFromNow(3),\n        timeZone: 'America/Los_Angeles'\n      }, \n      summary: 'Have Fun!!!',\n      description: 'Do some cool stuff and have a fun time doing it'\n    })\n\n    await this.getCalendar();\n  }\n\n\n}\n\nconst hoursFromNow = (n) => new Date(Date.now() + n * 1000 * 60 * 60 ).toISOString();\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}